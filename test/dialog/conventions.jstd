travi.test.testCase('dialog conventions', (function () {
    'use strict';

    var any = travi.test.any,
        conventions = travi.ui.dialog.conventions,
        dialog = travi.ui.dialog.simple,
        dialogEvents = travi.ui.dialog.events,

        url = any.string(),
        linkText = any.string();

    return {
        setUp: function () {
            $('body')
                .append('<a href="' + url + '" class="dialog-target">' + linkText + '</a>')
                .append('<a href="' + url + '" class="different-class"></a>');

            sinon.stub(dialog, 'loadFromUrl');
            travi.test.events.stub();

            conventions.init();
        },

        tearDown: function () {
            travi.test.common.restore([
                dialog.loadFromUrl,
                dialog.recenter
            ]);
            travi.test.events.restore();
            $('body').off();
        },

        'test that clicking on a link with the dialog-target class loads dialog from href': function () {
            var clickEvent = new $.Event('click');

            $('a.dialog-target').trigger(clickEvent);

            assert.calledWith(dialog.loadFromUrl, {
                url: url,
                title: linkText
            });
            assert(clickEvent.isDefaultPrevented());
        },

        'test that link without dialog-target link does not load dialog': function () {
            $('a.different-class').click();

            refute.called(dialog.loadFromUrl);
        },

        'test that dialog launched from link added after initialization': function () {
            $('body').append('<a href="#" class="dialog-target new"></a>');

            $('a.new').click();

            assert.calledOnce(dialog.loadFromUrl);
        },

        'test that dialog is re-centered when content is re-sized': function () {
            sinon.stub(dialog, 'recenter');

            travi.test.events.publish(dialogEvents.keys.RESIZED);

            assert.calledOnce(dialog.recenter);
        }
    };
}()));