travi.test.testCase('dialog api tests', (function () {
    'use strict';

    var dialog = travi.ui.dialog.simple,
        any = travi.test.any,
        dialogEvents = travi.ui.dialog.events,

        successHandler,

        insertedId = 'fromAjax',
        insertedContent = 'some content';

    function dialogClosedProperly() {
        assert.equals(0, $('#' + insertedId).length);
    }

    return {
        setUp: function () {
            sinon.stub($, 'ajax', function (options) {
                successHandler = options.success;
            });
            sinon.stub(travi.events, 'publish');
        },

        tearDown: function () {
            travi.test.common.restore([
                $.ajax,
                travi.events.publish,
                $.prototype.dialog
            ]);
        },

        'test that html requested from url': function () {
            var url = 'some url';

            dialog.loadFromUrl({
                url: url
            });

            sinon.assert.calledWith($.ajax, sinon.match({
                url: url,
                dataType: 'html',
                type: 'get'
            }));
        },

        'test that dialog launched, containing content from response': function () {
            var title = any.string();
            dialog.loadFromUrl({title: title});

            successHandler('<section id="' + insertedId + '">' + insertedContent + '</section>');

            assert.equals(insertedContent, $('.ui-dialog section#' + insertedId).text());
            assert.equals(title, $('.ui-dialog-title').text());
            assert($('#' + insertedId).dialog('option', 'modal'));
        },

        'test that closing the dialog removes it from the DOM': function () {
            dialog.loadFromUrl({});
            successHandler('<section id="' + insertedId + '">' + insertedContent + '</section>');

            $('#' + insertedId).dialog('close');

            dialogClosedProperly();
        },

        'test that event published upon successful load': function () {
            dialog.loadFromUrl({});
            successHandler('<section></section>');

            sinon.assert.calledWith(travi.events.publish, dialogEvents.keys.LOADED, {
                dialog: $('.ui-dialog-content').get(0)
            });
        },

        'test that calling close programmatically closes the dialog': function () {
            dialog.loadFromUrl({});
            successHandler('<section id="' + insertedId + '"></section>');

            dialog.close();

            dialogClosedProperly();
        },

        'test that calling recenter programmatically recenters the dialog': function () {
            sinon.stub($.prototype, 'dialog');

            dialog.recenter();

            assert.calledWith($.prototype.dialog, 'option', 'position', {
                my: 'center',
                at: 'center',
                of: window
            });
        }
    };
}()));